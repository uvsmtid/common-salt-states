<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>{{ job_description }}</description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.scm.NullSCM"/>
  <assignedNode>{{ job_assigned_host }}</assignedNode>
  <canRoam>false</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <jenkins.triggers.ReverseBuildTrigger>
      <spec></spec>
      <upstreamProjects>{{ trigger_after_jobs }}</upstreamProjects>
      <threshold>
        <name>SUCCESS</name>
        <ordinal>0</ordinal>
        <color>BLUE</color>
        <completeBuild>true</completeBuild>
      </threshold>
    </jenkins.triggers.ReverseBuildTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>

        {% set user_home_dir = pillar['system_hosts'][grains['id']]['primary_user']['posix_user_home_dir'] %}
        {% set vagrant_files_dir = pillar['system_features']['vagrant_configuration']['vagrant_files_dir'] %}
        {% set vagrant_dir = user_home_dir + '/' + vagrant_files_dir %}
        cd "{{ vagrant_dir }}"
        vagrant destroy

        # Remove old minion keys (keys before hosts are re-instantiated).
        {% for selected_minion_id in pillar['system_hosts'].keys() %}
        {% if not selected_minion_id in pillar['system_host_roles']['controller-role']['assigned_hosts'] %}
        sudo salt-key -y -d "{{ selected_minion_id }}"
        {% endif %}
        {% endfor %}

      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
