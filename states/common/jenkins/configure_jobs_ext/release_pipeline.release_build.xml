<?xml version='1.0' encoding='UTF-8'?>
<project>

  {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import common_job_configuration with context %}
  {{ common_job_configuration(job_config, job_environ) }}

  <builders>

    {#
    DISABLE copying artifacts because it is the very first job in the pipeline.
    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import copy_artifacts with context %}
    {{ copy_artifacts(job_config, job_environ) }}
    #}

    <hudson.tasks.Shell>
      <command>

        set -e
        set -u

        {% if 'skip_script_execution' in job_config and job_config['skip_script_execution'] %}
        exit 0
        {% endif %}

        {% if 'skip_if_true' in job_config %}
        if [ "${{ '{' }}{{ job_config['skip_if_true'] }}:-false}" == "true" ]
        then
            exit 0
        fi
        {% endif %}

        # TODO: Implement
        # Obtain exact fingerprinted artifact generated by
        # `init_pipeline.start_new_build` (or, which seems even more
        # convenient, fingerprinted artifact from the end of
        # sequence of pipelines started by this initial job).
        # The idea is to trace back which build the release is based on.

      </command>
    </hudson.tasks.Shell>
  </builders>

  <publishers>

    # DISABLED: Not implemented.
    # TODO: Implement.
    {% if False %}
    <!--
        Archive and Fingerprint initial dynamic build descriptor.
        This is only needed to trace jobs of the same pipeline execution.
    -->
    <hudson.tasks.ArtifactArchiver>
      <artifacts>dynamic_build_descriptor.yaml</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>

    {% endif %}

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import parameterized_job_triggers_macro with context %}
    {{ parameterized_job_triggers_macro(job_config, job_environ) }}

  </publishers>

  <buildWrappers/>

</project>

