<?xml version='1.0' encoding='UTF-8'?>
<project>

  {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import common_job_configuration with context %}
  {{ common_job_configuration(job_config, job_environ) }}

  <builders>

    {#
    DISABLE copying artifacts because this job is supposed to retrieve
            the required artifact from another job in a special way.
    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import copy_artifacts with context %}
    {{ copy_artifacts(job_config, job_environ) }}
    #}

    <hudson.tasks.Shell>
      <command>

        set -e
        set -u

        {% if 'skip_script_execution' in job_config and job_config['skip_script_execution'] %}
        exit 0
        {% endif %}

        {% if 'skip_if_true' in job_config %}
        if [ "${{ '{' }}{{ job_config['skip_if_true'] }}:-false}" == "true" ]
        then
            exit 0
        fi
        {% endif %}

        JOB_STATUS='stable'

        {% from 'common/libs/host_config_queries.sls' import get_system_host_primary_user_posix_home with context %}

        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import locate_dynamic_build_descriptor with context %}
        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import update_dynamic_build_descriptor with context %}

        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import key_getter_python_script with context %}
        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import key_setter_python_script with context %}

        #######################################################################
        # Locate dynamic build descriptor.

        # NOTE: Do not check existance of initital dyn build desc -
        #       this job has to select previous one.
        {{ locate_dynamic_build_descriptor(job_config, job_environ, check_init_dyn_build_desc = False) }}

        # Retreive initial and last dyn build desc for specified build title.
        # The initial dyn build desc is the fingerprinted artifact
        # which was generated by `init_pipeline.start_new_build` -
        # it allows to trace back which build the release is based on.
        # TODO: Implement. This is a workaround - just get the latest.
        ls -l "${LATEST_DYN_BUILD_DESC_PATH}"
        ls -l "${INIT_DYN_BUILD_DESC_PATH}"

        #######################################################################
        # TODO: Write updates to dyn build desc related to initiated release.

        # TODO: Implement
        # Obtain exact fingerprinted artifact generated by
        # `init_pipeline.start_new_build` (or, which seems even more
        # convenient, fingerprinted artifact from the end of
        # sequence of pipelines started by this initial job).
        # The idea is to trace back which build the release is based on.

        #######################################################################
        # Update dynamic build descriptor.

        {{ update_dynamic_build_descriptor(job_config, job_environ) }}

        # Present as initial dyn build desc as an artifact
        # build by this first job (for fingerprinting).
        cp "${INIT_DYN_BUILD_DESC_PATH}" "initial.dynamic_build_descriptor.yaml"

        #######################################################################
        # Report status of the execution.

        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import get_JENKINS_CLI_TOOL_INVOKE_STRING with context %}
        {{ get_JENKINS_CLI_TOOL_INVOKE_STRING(job_config, job_environ) }}

        if [ "${JOB_STATUS}" == 'unstable' ]
        then

            # Set build unstable.
            # See: http://stackoverflow.com/a/8822743/441652
            eval "${JENKINS_CLI_TOOL_INVOKE_STRING} set-build-result unstable"

        fi

        #######################################################################

      </command>
    </hudson.tasks.Shell>
  </builders>

  <publishers>

    <!--
        Archive and Fingerprint initial dynamic build descriptor.
        This is only needed to trace jobs of the same pipeline execution.

        NOTE: This job is supposed to _re-archive_ artifact
              which was already archived before in the upstream job
              `init_pipeline.start_new_build` to link it
              with this upstream job.
    -->
    <hudson.tasks.ArtifactArchiver>
      <artifacts>initial.dynamic_build_descriptor.yaml</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>true</onlyIfSuccessful>
      <fingerprint>true</fingerprint>
      <defaultExcludes>true</defaultExcludes>
    </hudson.tasks.ArtifactArchiver>

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import parameterized_job_triggers_macro with context %}
    {{ parameterized_job_triggers_macro(job_config, job_environ) }}

  </publishers>

  <buildWrappers/>

</project>

