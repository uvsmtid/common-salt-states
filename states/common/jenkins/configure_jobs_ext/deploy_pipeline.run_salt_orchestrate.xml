<?xml version='1.0' encoding='UTF-8'?>
<project>

  {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import common_job_configuration with context %}
  {{ common_job_configuration(job_config, job_environ) }}

  {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import job_multiple_scm_configuration with context %}
  {{ job_multiple_scm_configuration(job_config, job_environ) }}

  <builders>

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import copy_artifacts with context %}
    {{ copy_artifacts(job_config, job_environ) }}

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import add_job_environment_variables with context %}
    {{ add_job_environment_variables(job_config, job_environ) }}

    <hudson.tasks.Shell>
      <command>

        {% from 'common/libs/host_config_queries.sls' import get_system_host_primary_user_posix_home with context %}

        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import locate_dynamic_build_descriptor with context %}
        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import update_dynamic_build_descriptor with context %}

        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import common_build_script_header with context %}
        {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import common_build_script_footer with context %}

        #######################################################################
        # Script header

        {{ common_build_script_header(job_config, job_environ) }}

        #######################################################################
        # Run orchestrate to make sure states across minions
        # are executed in proper order.

        # NOTE: We run orchestrate 2 times
        #       (due to issues with some RPM-related states):
        #       * 1st time without error detection
        #       * 2nd time with error detection
        # TODO: Fix Orchestrate maybe by trying to configure YUM/DNF
        #       before running any other installation.

        # 1st time without error detection
        # This is supposed to show failed states in cleaner (non-JSON) output.
        sudo salt-run \
            -l debug \
            state.orchestrate common.orchestrate.run_all_stages \
            test=True | tee salt.output.yaml

        # 2nd time with error detection
        # This is not supposed to fail -
        # therefore, salt.output.json gets verified subsequently.
        sudo salt-run \
            --out json \
            -l debug \
            state.orchestrate common.orchestrate.run_all_stages \
            test=False | tee salt.output.json

        # Capture errors from Salt.
        # At the moment salt does not return exit/error code.
        # See: https://github.com/saltstack/salt/issues/18510
        /srv/states/bootstrap/bootstrap.dir/modules/utils/check_salt_output.py \
            salt.output.json

        #######################################################################
        # Script footer

        {{ common_build_script_footer(job_config, job_environ) }}

        #######################################################################

      </command>
    </hudson.tasks.Shell>
  </builders>

  <publishers>

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import archive_artifacts with context %}
    {{ archive_artifacts(job_config, job_environ) }}

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import parameterized_job_triggers_macro with context %}
    {{ parameterized_job_triggers_macro(job_config, job_environ) }}

    {% from 'common/jenkins/configure_jobs_ext/common_xml_templates.lib.sls' import send_email_notifications with context %}
    {{ send_email_notifications(job_config, job_environ) }}

  </publishers>

  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.2"/>
  </buildWrappers>

</project>

