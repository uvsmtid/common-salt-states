
###############################################################################
#
# These variables are fed into Jinja templates of pillars -
# they simply parameterize pillars.
#
# In addition to parameterization of pillars, properties can also
# be accessed themselves under root of `pillar` dict in state template files.
#
# See also:
# https://github.com/saltstack/salt/issues/6955#issuecomment-110793057
#
# USECASE 1: Initial Salt master setup
#
# See `states/bootstrap/bootstrap.dir/configure_salt.py` script.
# This script is able to configure Salt with single master minion
# using ONLY this property file as parameter.
#
# USECASE 2: frequently changed conditions affecting multiple pillars
#
# In this case properties are simply set of parameters which are supposed
# to be changed more frequently than other content in pillar files.
# For example, if Salt configures laptop which is often switched between
# proxied and direct Internet networking, properties provide single variable
# (see `use)internet_http_proxy` below) which affects all relevant pillars
# to reconfigure system for required networking conditions.
#

use_internet_http_proxy: False

offline_mode: False

project_name: common

# Profile name specifies default branch name for configuration
# repositories (e.g. pillars).
profile_name: develop

master_minion_id: master_minion_id

# Should master minion be defined through standard template host or no?
# If true, `profile/common/system_hosts/master_minion_id.sls` template is used.
# The template may not work for all cases.
# Alternatively (if false), host definition specified in
# `master_minion_id` property will be used.
use_master_minion_template_host: True

default_username: username

# Specify dict of target profile names (mapped into any value).
# TODO: Add link to docs.
load_bootstrap_target_envs:
    develop: ~

# Map between absolute path of symlink to absolut path of its target.
# This is used for initial setup of various symbolic links.
symlinks_map:
    '/home/username/Works/common-salt-pillars.git': '/home/username/Works/common-salt-states.git'
    '/home/username/Works/common-salt-pillars.bootstrap-target.git': '/home/username/Works/common-salt-states.git'

# TODO: Make absolute paths to repositories relative to primary user's path.
#       This is to be able to make paths consistent
#       when `offline-minion-installer` especially with different
#       primary user per minion.
# TODO: While this file with properties is YAML (and not Jinja template)
#       consider making values (not keys) parameterized by the values
#       from this properties themselves. NOTE: It should work with
#       both standard Python YAML loader and Jinja template (or should be
#       refactored to achieve this).

# The following values specify absolute locations of important repositories.
# One way these paths are used is to set up symlinks from locations
# known by Salt (in `/srv` directory) to the required data in repositories.
repo_path_states: '/home/username/Works/common-salt-states.git'

repo_path_pillars: '/home/username/Works/common-salt-pillars.git'

# The `bootstrap-target` pillars repository is always used if
# bootstrap package has to be generated.
repo_path_bootstrap_target_pillars: '/home/username/Works/common-salt-pillars.bootstrap-target.git'

# Additional symlinks from common states repo to project states repos.
projects_states_repo_paths:
    {}

# If set, it specifies repository which is considered parent
# to all repositories (to track releases).
parent_repo_name: ~

# Primary network which is NOT controlled by Salt (directly or indirectly,
# e.g. through configuration of some virtualized networks) and exist
# to contact minions before running any Salt states.
#
# It is important to resolve master hostname on this network
# (otherwise it won't be reachible until virtual networks are created).
# In case of minion, it does not matter whether they have any interface
# with assigned IP within the primary network as long as they can reach
# master from any of the networks they are in.
primary_network:
    network_name: primary_net
    network_ip_subnet: 192.168.40.0
    # WARNING: netmask and prefix should be consistent
    #          (they define the same thing).
    network_ip_netmask: 255.255.255.0
    network_ip_netprefix: 24
    #
    network_ip_broadcast: 192.168.40.255
    # Default route.
    network_ip_gateway: 192.168.40.1

# Minions to be managed mapped into their IP addresses on primary network.
# NOTE: In order for this list to be effective, there are two conditions:
#       - Pillar with minion configuration should actually use this
#         list to enable/disable this minion.
#       - List of accepted minions configured by `salt-key` command should
#         be re-configured accordingly so that `*` actually means this list.
enabled_minion_hosts:
    master_minion_id: 192.168.40.1

###############################################################################
# EOF
###############################################################################

